// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	auth.proto

It has these top-level messages:
	AuthRequest
	AuthResponse
	LoginURLRequest
	LoginURLResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type AuthRequest struct {
	State string `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
	Code  string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
}

func (m *AuthRequest) Reset()                    { *m = AuthRequest{} }
func (m *AuthRequest) String() string            { return proto1.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()               {}
func (*AuthRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AuthRequest) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *AuthRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type AuthResponse struct {
	User []byte `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (m *AuthResponse) Reset()                    { *m = AuthResponse{} }
func (m *AuthResponse) String() string            { return proto1.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()               {}
func (*AuthResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AuthResponse) GetUser() []byte {
	if m != nil {
		return m.User
	}
	return nil
}

type LoginURLRequest struct {
	State string `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
}

func (m *LoginURLRequest) Reset()                    { *m = LoginURLRequest{} }
func (m *LoginURLRequest) String() string            { return proto1.CompactTextString(m) }
func (*LoginURLRequest) ProtoMessage()               {}
func (*LoginURLRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LoginURLRequest) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type LoginURLResponse struct {
	Url string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
}

func (m *LoginURLResponse) Reset()                    { *m = LoginURLResponse{} }
func (m *LoginURLResponse) String() string            { return proto1.CompactTextString(m) }
func (*LoginURLResponse) ProtoMessage()               {}
func (*LoginURLResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *LoginURLResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func init() {
	proto1.RegisterType((*AuthRequest)(nil), "proto.AuthRequest")
	proto1.RegisterType((*AuthResponse)(nil), "proto.AuthResponse")
	proto1.RegisterType((*LoginURLRequest)(nil), "proto.LoginURLRequest")
	proto1.RegisterType((*LoginURLResponse)(nil), "proto.LoginURLResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AuthSvc service

type AuthSvcClient interface {
	HandleAuth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error)
	GetLoginURL(ctx context.Context, in *LoginURLRequest, opts ...grpc.CallOption) (*LoginURLResponse, error)
}

type authSvcClient struct {
	cc *grpc.ClientConn
}

func NewAuthSvcClient(cc *grpc.ClientConn) AuthSvcClient {
	return &authSvcClient{cc}
}

func (c *authSvcClient) HandleAuth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := grpc.Invoke(ctx, "/proto.AuthSvc/HandleAuth", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authSvcClient) GetLoginURL(ctx context.Context, in *LoginURLRequest, opts ...grpc.CallOption) (*LoginURLResponse, error) {
	out := new(LoginURLResponse)
	err := grpc.Invoke(ctx, "/proto.AuthSvc/GetLoginURL", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AuthSvc service

type AuthSvcServer interface {
	HandleAuth(context.Context, *AuthRequest) (*AuthResponse, error)
	GetLoginURL(context.Context, *LoginURLRequest) (*LoginURLResponse, error)
}

func RegisterAuthSvcServer(s *grpc.Server, srv AuthSvcServer) {
	s.RegisterService(&_AuthSvc_serviceDesc, srv)
}

func _AuthSvc_HandleAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthSvcServer).HandleAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AuthSvc/HandleAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthSvcServer).HandleAuth(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthSvc_GetLoginURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginURLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthSvcServer).GetLoginURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AuthSvc/GetLoginURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthSvcServer).GetLoginURL(ctx, req.(*LoginURLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthSvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AuthSvc",
	HandlerType: (*AuthSvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HandleAuth",
			Handler:    _AuthSvc_HandleAuth_Handler,
		},
		{
			MethodName: "GetLoginURL",
			Handler:    _AuthSvc_GetLoginURL_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}

func init() { proto1.RegisterFile("auth.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x2c, 0x2d, 0xc9,
	0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xe6, 0x5c, 0xdc, 0x8e, 0xa5,
	0x25, 0x19, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x22, 0x5c, 0xac, 0xc5, 0x25, 0x89,
	0x25, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x10, 0x8e, 0x90, 0x10, 0x17, 0x4b, 0x72,
	0x7e, 0x4a, 0xaa, 0x04, 0x13, 0x58, 0x10, 0xcc, 0x56, 0x52, 0xe2, 0xe2, 0x81, 0x68, 0x2c, 0x2e,
	0xc8, 0xcf, 0x2b, 0x06, 0xab, 0x29, 0x2d, 0x4e, 0x2d, 0x02, 0x6b, 0xe4, 0x09, 0x02, 0xb3, 0x95,
	0xd4, 0xb9, 0xf8, 0x7d, 0xf2, 0xd3, 0x33, 0xf3, 0x42, 0x83, 0x7c, 0xf0, 0x5a, 0xa0, 0xa4, 0xc2,
	0x25, 0x80, 0x50, 0x08, 0x35, 0x50, 0x80, 0x8b, 0xb9, 0xb4, 0x28, 0x07, 0xaa, 0x0e, 0xc4, 0x34,
	0x6a, 0x61, 0xe4, 0x62, 0x07, 0xd9, 0x19, 0x5c, 0x96, 0x2c, 0x64, 0xce, 0xc5, 0xe5, 0x91, 0x98,
	0x97, 0x92, 0x93, 0x0a, 0x12, 0x10, 0x12, 0x82, 0x78, 0x4a, 0x0f, 0xc9, 0x2b, 0x52, 0xc2, 0x28,
	0x62, 0x10, 0x43, 0x95, 0x18, 0x84, 0x1c, 0xb8, 0xb8, 0xdd, 0x53, 0x4b, 0x60, 0xb6, 0x09, 0x89,
	0x41, 0x55, 0xa1, 0xb9, 0x53, 0x4a, 0x1c, 0x43, 0x1c, 0x66, 0x42, 0x12, 0x1b, 0x58, 0xc6, 0x18,
	0x10, 0x00, 0x00, 0xff, 0xff, 0x66, 0x3d, 0x3f, 0xb1, 0x4e, 0x01, 0x00, 0x00,
}
